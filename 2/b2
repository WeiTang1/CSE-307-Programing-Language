import sys

def CalculateFun(num, token, cap, refill, currentfun, funList, totalfun,counter):
    print("recursive level #", counter)
    if num==0:
        print("Return because num currentfun = ",currentfun)
        totalfun.append(currentfun)
        return
    elif token <0:
        print("Rturn because token and current fun = ",currentfun)
        totalfun.append(currentfun)
        return
    for i in range(1,token+1):
        print("before calculate the currentfun is ", currentfun)
        currentfun = currentfun + i * funList[counter]
        token = token - i + refill
        if token > cap :
            token = cap
        print("num = ",num,"token = ",token,"currentfun= ",currentfun,"counter = ", counter,"i = ",i,"funList = ",funList[counter])
        CalculateFun(num-1,token,cap,refill,currentfun,funList,totalfun,counter+1)

        print("after recursice call,", currentfun)



f = open(str(sys.argv[1]))

num = int(f.readline()[4:5])
cap = int(f.readline()[4:5])
refill = int(f.readline()[7:8])
line = f.readline()
funList=[]
while line:
    if line[6:7]=='-':
        funList.append(int(line[6:8]))
    else:
        funList.append(int(line[6:7]))
    line = f.readline()



print ("num = ",num,"cap= ",cap,"refill =", refill,"fun = ",funList)
f.close();
totalfun = []
token = cap
CalculateFun(num,token,cap,refill,0,funList,totalfun,0)
print(totalfun)
